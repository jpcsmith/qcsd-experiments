---
# The Alexa top list, http://s3.amazonaws.com/alexa-static/top-1m.csv.zip
alexa_list: resources/alexa-top10000-2021-07-18.csv.gz

# Versions of QUIC supported in our experiments
quic_versions: ["h3-29"]

# Second level domains that whose representation in the dataset are reduced
frequent_slds: ["blogspot.com", "appspot.com", "myshopify.com", "withgoogle.com",
                "translate.goog", "sch.id"]

webpage_graphs:
  # The number of dependency graphs collected in each batch
  batch_size: 100
  # Collect n_batches * batch_size web-page graphs
  n_batches: 5

# The log level passed to RUST_LOG for the neqo-client
neqo_log_level: "neqo-transport=info"

# The User-Agent to use for collections
user_agent: >-
  Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko)
  Chrome/87.0.4280.88 Safari/537.36

# Wireguard clients and thier ports assignments, which are used to filter
# the packet captures
wireguard:
  n_regions: 1
  n_clients_per_region: 6
  client_ports:
    - [51501, 51502, 51503, 51504, 51505, 51506]
  interface: "docker0"


# Experiment configurations
experiment:
  # Default configurations for FRONT and tamaraw
  default:
    front_config: &front-default
      max_client_packets: 1000
      max_server_packets: 1000
      packet_size: 1200
      peak_minimum: 0.5
      peak_maximum: 7
    tamaraw_config: &tamaraw-default
      rate_in: 5
      rate_out: 20
      packet_multiple: 300
      packet_size: 750

    # Defaults for hyperparameters to be used with the deep learning
    # classifiers for each defence
    hyperparams: &hyperparams-default
      front:
        varcnn-time: tune
        varcnn-sizes: tune
        dfnet: tune
      tamaraw:
        varcnn-time: tune
        varcnn-sizes: tune
        dfnet: tune
      undefended:
        varcnn-time: "n_packets=5000"
        varcnn-sizes: "n_packets=5000"
        dfnet: "n_packets=5000"

  # Configuration for checking how well the shaping was performed.
  # Associated rules are found in `workflow/rules/shaping-eval.smk`.
  shaping_eval:
    n_samples: &ovh_samples 50
    scores:
      ts_offset: {min: 0, max: 200, inc: 5}
      resample_rates: ["1ms", "5ms", "25ms", "50ms"]
      lcss_eps: {"front": 150, "tamaraw": 250}
      # min_pkt_size: [0]
    front: *front-default
    tamaraw: *tamaraw-default

  # Configuration for the ML evaluation in the single-connection setting.
  # Associated rules are found in `workflow/rules/ml-eval-conn.smk`.
  ml_eval_conn:
    dataset:
      n_monitored: 10
      n_instances: 10
      n_unmonitored: 50
    # min_pkt_size: 150
    # splits: {n_folds: 5, seed: 438, validation_size: 0.1}
    classifiers: ["kfp", "dfnet", "varcnn"]
    front: &front-conn
      <<: *front-default
    tamaraw: &tamaraw-conn
      <<: *tamaraw-default
      packet_size: 1200
      msd_limit_excess: 1500

    hyperparams: *hyperparams-default

  ml_eval_mconn:
    dataset:
      n_monitored: 100
      n_instances: 100
      n_unmonitored: 1000
    splits: {n_folds: 5, seed: 439, validation_size: 0.1}
    classifiers: ["kfp", "dfnet", "varcnn"]
    front: &mconn-front
      <<: *front-default
      max_client_packets: 1300
      max_server_packets: 1300
      use_empty_resources: true
      packet_size: 1250
      max_udp_payload_size: 1272
    tamaraw: &mconn-tamaraw
      <<: *tamaraw-default
      packet_size: 1250
      max_udp_payload_size: 1272
      use_empty_resources: true
      msd_limit_excess: 1500

    hyperparams: *hyperparams-default

  overhead_eval_mconn:
    n_samples: *ovh_samples
    front: *mconn-front
    tamaraw: *mconn-tamaraw

  ml_eval_brows:
    dataset:
      n_monitored: 100
      n_instances: 100
      n_unmonitored: 10_000
    min_pkt_size: 150
    splits: {n_folds: 5, seed: 438, validation_size: 0.1}
    classifiers: ["kfp", "dfnet", "varcnn"]
    front:
      <<: *front-default
      max_client_packets: 1300
      max_server_packets: 1300
      packet_size: 1250
      max_udp_payload_size: 1272
      peak_minimum: 0.2
      peak_maximum: 3

    hyperparams: *hyperparams-default

  improved_tamaraw:
    dataset:
      n_monitored: 100
      n_instances: 100
      n_unmonitored: 8000
    tamaraw:
      <<: *tamaraw-default
      packet_size: 1250
      max_udp_payload_size: 1272
